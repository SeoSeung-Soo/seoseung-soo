name: Code Checks

on:
  pull_request:
    branches:
      - "main"
      - "develop"

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Enable caching
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Create virtual environment
        run: |
          uv venv .venv
          source .venv/bin/activate

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Set multiline environment variable
        run: |
          echo "${{ secrets.ENVS }}" >> .env

      - name: Run Ruff
        run: |
          uv run ruff check --select I --fix
          uv run ruff check --fix

      - name: Run Mypy
        run: uv run mypy .

  tests:
    runs-on: ubuntu-latest
    environment: DJANGO
    services:
      # postgresql db service
      db:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pw1234
          POSTGRES_DB: seoseung_soo
          TZ: Asia/Seoul
        # health check
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Enable caching
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Create virtual environment
        run: |
          uv venv .venv
          source .venv/bin/activate

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Set multiline environment variable
        run: |
          echo "${{ secrets.ENVS }}" >> .env

      - name: Run tests
        run: |
          uv run coverage run -m pytest .
          uv run coverage report -m

      - name: Django tests
        run: uv run python manage.py test